# CI/CD 파이프라인 워크플로우 정의
name: CI/CD Pipeline

# 워크플로우 트리거 설정
on:
  push:
    branches: [ main ]  # main 브랜치에 푸시될 때
    tags:
      - 'v*'  # v로 시작하는 모든 태그에 대해 워크플로우 실행
  pull_request:
    branches: [ main ]  # main 브랜치로의 PR에 대해
  workflow_dispatch:  # 수동으로 워크플로우를 실행할 수 있게 함

jobs:
  build:
    # 주의: 현재 Linux 환경에서 실행 중이나, Windows 경로를 참조하고 있어 문제 발생
    # 해결방안: runs-on을 windows-latest로 변경하거나, 프로젝트 설정을 크로스 플랫폼 호환성을 위해 수정해야 함
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'  # 프로젝트에 맞는 .NET 버전 사용
    
    - name: Restore dependencies
      # 주의: Windows 경로 문제로 인해 패키지 복원 실패
      # 해결방안: /p:EnableWindowsTargeting=true 옵션 추가
      run: dotnet restore /p:EnableWindowsTargeting=true
    
    - name: Build
      # 주의: Windows 경로 문제로 인해 빌드 실패
      # 해결방안: /p:EnableWindowsTargeting=true 옵션 추가
      run: dotnet build --configuration Release --no-restore /p:EnableWindowsTargeting=true
    
    - name: Test
      # 주의: Windows 경로 문제로 인해 테스트 실패
      # 해결방안: /p:EnableWindowsTargeting=true 옵션 추가
      run: dotnet test --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:EnableWindowsTargeting=true

  # SonarCloud 분석 작업
  sonarcloud:
    # 주의: SonarScanner가 JRE를 프로비저닝하는 데 시간이 많이 소요됨
    # 해결방안: 호환되는 Java 버전이 이미 설치되어 있다면 /d:sonar.scanner.skipJreProvisioning=true 옵션 추가
    runs-on: windows-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Install SonarCloud scanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        dotnet sonarscanner begin /k:"jaewan234_pipeline" /o:"jaewan234" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.scanner.skipJreProvisioning=true
        dotnet build --configuration Release /p:EnableWindowsTargeting=true
        dotnet test --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:EnableWindowsTargeting=true
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  # 나머지 작업들 (create_release, generate_docs)은 변경 없이 유지
